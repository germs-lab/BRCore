% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_core.R
\name{extract_core}
\alias{extract_core}
\title{Extract Core Microbial Taxa}
\usage{
extract_core(
  physeq,
  Var,
  method,
  increase_value = NULL,
  Group = NULL,
  Level = NULL,
  trimOTUs = TRUE,
  .parallel = FALSE,
  ncores = detectCores() - 1
)
}
\arguments{
\item{physeq}{A \code{phyloseq} object containing an OTU table, taxonomy table, and sample metadata.}

\item{Var}{A character string specifying the column name in the sample metadata to group samples.}

\item{method}{A character string specifying the method for selecting core taxa.}

\item{increase_value}{A numeric value specifying the threshold for core taxa selection.}

\item{Group}{A character string specifying the column name in the sample metadata to subset the data.}

\item{Level}{A character vector specifying the level(s) within the \code{Group} column to subset the data.}

\item{trimOTUs}{A logical value indicating whether to trim OTUs with zero abundance.}

\item{.parallel}{A logical value indicating whether to parallelize the calculations with \code{mcapply()} or not.}

\item{ncores}{An integer specifying the number of CPU cores to use for parallel processing. Default is \code{detectCores() - 1}.}
}
\value{
A list containing the following elements:
\itemize{
\item \code{core_otus}: A vector of core OTU IDs.
\item \code{bray_curtis_ranked}: A data frame of Bray-Curtis dissimilarity rankings.
\item \code{otu_rankings}: A data frame of OTU rankings based on occupancy and abundance.
\item \code{occupancy_abundance}: A data frame of occupancy and abundance values.
\item \code{otu_table}: The OTU table used for analysis.
\item \code{sample_metadata}: The sample metadata used for analysis.
\item \code{taxonomy_table}: The taxonomy table used for analysis.
}
}
\description{
Identifies core microbial taxa based on abundance-occupancy distributions and their contributions
to Bray-Curtis dissimilarity. Core taxa are selected using either the "increase" or "elbow" method.
}
\details{
The functions below use abundance-occupancy distributions fitted to a neutral model
described by Shade and Stopnisek, 2019. Core microbial taxa are selected based on their
contributions to overall microbial beta-diversity. In the described function, a core microbial taxa
must contribute at least ~2\% of variation to Bray-Curtis dissimilarity to be considered a 'core' microbial taxa but this value can be manipulated within the function.
Core microbial taxa whose abundance and occupancy are above the fitted neutral model's confidence intervals
indicates greater occupancy across samples given abundance, suggesting deterministic selection by the plant.
Alternatively, core microbial taxa that are below the fitted neutral model indicates greater abundance given
lower occupancy; these taxa may be  dispersal limited.
More info on the functions can be found in Shade and Stopnisek, 2019. Original functions were developed in VanWallendael et al 2021.
Code was adapted and updated by Nicco Benucci (GLBRC, Bonito Lab) and Brandon Kristy (GLBRC, Evans Lab).
Error handling, helper functions and refactoring by Bolívar Aponte Rolón (CABBI, GERMS Lab) and Brandon Kristy. -2025-03-06
NOTE: This technique requires en even sampling depth to perform, which requires rarefaction.
}
\examples{
\dontrun{
# Load the esophagus dataset
library(phyloseq)
data(esophagus, package = "phyloseq")

#' Get the taxa names from the esophagus dataset
taxa_names <- taxa_names(esophagus)

# Define realistic taxonomy levels
kingdoms <- c("Bacteria", "Archaea")
phyla <- c("Firmicutes",
"Bacteroidetes",
"Proteobacteria",
"Actinobacteria",
"Euryarchaeota")
classes <- c("Clostridia",
"Bacteroidia",
"Gammaproteobacteria",
"Actinobacteria",
"Methanobacteria")
orders <- c("Clostridiales",
"Bacteroidales",
"Enterobacterales",
"Bifidobacteriales",
"Methanobacteriales")
families <- c("Lachnospiraceae",
"Bacteroidaceae",
"Enterobacteriaceae",
"Bifidobacteriaceae",
"Methanobacteriaceae")
genera <- c("Blautia",
"Bacteroides",
"Escherichia",
"Bifidobacterium",
"Methanobrevibacter")
species <- c("Blautia producta",
"Bacteroides fragilis",
"Escherichia coli",
"Bifidobacterium longum",
"Methanobrevibacter smithii")

# Create a mock taxonomy table
set.seed(8998); mock_taxonomy_table <- matrix(
  c(
    sample(kingdoms, length(taxa_names), replace = TRUE),
    sample(phyla, length(taxa_names), replace = TRUE),
    sample(classes, length(taxa_names), replace = TRUE),
    sample(orders, length(taxa_names), replace = TRUE),
    sample(families, length(taxa_names), replace = TRUE),
    sample(genera, length(taxa_names), replace = TRUE),
    sample(species, length(taxa_names), replace = TRUE)
  ),
  nrow = length(taxa_names),
  ncol = 7,
  dimnames = list(
    taxa_names,
    c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")
  )
)

# Convert to a taxonomy table object
tax_table <- tax_table(mock_taxonomy_table)

# Add sample metadata to the esophagus dataset
sample_data <- data.frame(
  Sample = sample_names(esophagus),
  Group = sample(c("A", "B"), nsamples(esophagus), replace = TRUE), #' Random groups
  row.names = sample_names(esophagus)
)

# Add the taxonomy table to the esophagus dataset
esophagus_with_tax <- merge_phyloseq(esophagus, tax_table, sample_data(sample_data))

# Extract core taxa using the "increase" method
core_result <- extract_core(
  physeq = esophagus_with_tax,
  Var = "Group",
  method = "increase",
  increase_value = 2,
  trimOTUs = TRUE,
.parallel = FALSE,
ncores = detectCores() - 1
)

# View the results
print(core_result)
}
}
